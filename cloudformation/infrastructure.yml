AWSTemplateFormatVersion: "2010-09-09"
Description: "Elastic Beanstalk environment for React app"

Parameters:
  ApplicationName:
    Type: String
    Default: full-cicd
    Description: Name of the Elastic Beanstalk application

  EnvironmentName:
    Type: String
    Default: full-cicd-prod
    Description: Name of the Elastic Beanstalk environment

  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type

Resources:
  # S3 Bucket for storing application versions
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ApplicationName}-deployments-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # IAM Role for EC2 instances
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier

  # Instance Profile
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role

  # IAM Role for Elastic Beanstalk Service
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticbeanstalk.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy

  # Elastic Beanstalk Application
  Application:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      Description: React application deployed via CI/CD

  # Elastic Beanstalk Environment (without initial version)
  Environment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref Application
      EnvironmentName: !Ref EnvironmentName
      Description: Production environment for React app
      SolutionStackName: "64bit Amazon Linux 2 v5.8.4 running Node.js 18"
      OptionSettings:
        # Instance settings
        - Namespace: aws:ec2:instances
          OptionName: InstanceTypes
          Value: !Ref InstanceType

        # Auto Scaling
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: "1"
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: "3"

        # Load Balancer
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application

        # Health Monitoring
        - Namespace: aws:elasticbeanstalk:healthreporting:system
          OptionName: SystemType
          Value: enhanced

        # Instance Profile
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref EC2InstanceProfile

        # Service Role
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: !Ref ServiceRole

        # Environment Variables
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NODE_ENV
          Value: production

Outputs:
  ApplicationURL:
    Description: URL of the deployed application
    Value: !Sub "http://${Environment.EndpointURL}"
    Export:
      Name: !Sub "${AWS::StackName}-ApplicationURL"

  ApplicationName:
    Description: Name of the Elastic Beanstalk application
    Value: !Ref Application
    Export:
      Name: !Sub "${AWS::StackName}-ApplicationName"

  EnvironmentName:
    Description: Name of the Elastic Beanstalk environment
    Value: !Ref Environment
    Export:
      Name: !Sub "${AWS::StackName}-EnvironmentName"

  S3Bucket:
    Description: S3 bucket for deployments
    Value: !Ref S3Bucket
    Export:
      Name: !Sub "${AWS::StackName}-S3Bucket"
